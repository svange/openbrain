name: PyPI
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write  # This is required for actions/checkout

jobs:
  run-tests:
    uses: ./.github/workflows/run-tests.yml
    secrets: inherit
    permissions:
        id-token: write
        contents: read

  py-pi-release:
    name: Release to PyPI
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install poetry
        run: pip install poetry==1.2.1
      - uses: bjoluc/semantic-release-config-poetry@v2
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}

#  github-release:
#    runs-on: ubuntu-latest
#    needs: py-pi-release
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./dist/openbrain-${{ github.ref }}.tar.gz
#          asset_name: openbrain-${{ github.ref }}.tar.gz
#          asset_content_type: application/gzip


#  update_release_draft:
#    permissions:
#      # write permission is required to create a github release
#      contents: write
#      # write permission is required for autolabeler
#      # otherwise, read permission is required at least
#      pull-requests: write
#    runs-on: ubuntu-latest
#    steps:
#      # (Optional) GitHub Enterprise requires GHE_HOST variable set
#      #- name: Set GHE_HOST
#      #  run: |
#      #    echo "GHE_HOST=${GITHUB_SERVER_URL##https:\/\/}" >> $GITHUB_ENV
#
#      # Drafts your next Release notes as Pull Requests are merged into "master"
#      - uses: release-drafter/release-drafter@v5
#        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
#        # with:
#        #   config-name: my-config.yml
#        #   disable-autolabeler: true
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#  publish:
#    runs-on: ubuntu-latest
#    needs: run-tests
#    steps:
#      #----------------------------------------------
#      #              publish to pypi
#      #----------------------------------------------
#      - name: Publish Python üêç distribution üì¶ to PyPI-test
#        uses: JRubics/poetry-publish@v1.17
#        with:
#          pypi_token: ${{ secrets.PYPI_API_KEY }}
#          plugins: poetry-dynamic-versioning-plugin



#  publish:
##    needs: Quality
#    # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
#    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'chore(release):')
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/setup-python@v2
#        with:
#          python-version: 3.11
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Semantic Release
#        run: |
#          pip install python-semantic-release
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          semantic-release publish

name: Test dev branch and deploy to pypi-test
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write  # This is required for actions/checkout

jobs:
  run-tests:
    uses: ./.github/workflows/run-tests.yaml
    secrets: inherit
    permissions:
        id-token: write
        contents: read

#  publish:
#    runs-on: ubuntu-latest
#    needs: run-tests
#    steps:
#      #----------------------------------------------
#      #              publish to pypi
#      #----------------------------------------------
#      - name: Publish Python üêç distribution üì¶ to PyPI-test
#        uses: JRubics/poetry-publish@v1.17
#        with:
#          pypi_token: ${{ secrets.PYPI_API_KEY }}
#          plugins: poetry-dynamic-versioning-plugin

  publish:
#    needs: Quality
    # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Semantic Release
        run: |
          pip install python-semantic-release
          git config user.name github-actions
          git config user.email github-actions@github.com
          semantic-release publish

  github-release:
    runs-on: ubuntu-latest
    needs: publish
    if: github.ref_name == 'v[0-9]+.[0-9]+.[0-9]+'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/openbrain-${{ github.ref }}.tar.gz
          asset_name: openbrain-${{ github.ref }}.tar.gz
          asset_content_type: application/gzip

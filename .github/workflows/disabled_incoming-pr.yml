name: Merge to dev on incoming PR
on:
  workflow_call:

#  pull_request:
#    types: [opened, synchronize, reopened]
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
env:
  AWS_GITHUB_ROLE_ARN: ${{ secrets.AWS_GITHUB_DEV_DEPLOYER_ROLE_ARN }}
  AWS_REGION: us-east-1
  PROJECT: openbrain
  REPOSITORYNAME: openbrain
  GITHUBORG: svange
  DISABLE_TUNER_API_MODE: 1
  INFRA_STACK_NAME: ai-infra
  SECRET_STORE_FRIENDLY_NAME: DevAiSecrets
  COMMON_ACCESS_POLICY_FRIENDLY_NAME: DevCommonAccessPolicy
  SESSION_TABLE_FRIENDLY_NAME: DevSessionTable
  AGENT_CONFIG_TABLE_FRIENDLY_NAME: DevAgentConfigTable
  LEAD_TABLE_FRIENDLY_NAME: DevLeadTable
  INFRASTRUCTURE_TOPIC_FRIENDLY_NAME: InfrastructureTopic
  BUSINESS_TOPIC_FRIENDLY_NAME: BusinessTopic
  EVENTBUS_FRIENDLY_NAME: DevEventBus
  OPENAI_API_KEY: ${{ secrets.DEV_OPENAI_KEY }}
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.AWS_GITHUB_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}
            #----------------------------------------------
            #       check-out repo and set-up python
            #----------------------------------------------
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Set up python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
            #----------------------------------------------
            #  -----  install & configure poetry  -----
            #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

            #----------------------------------------------
            #       load cached venv if cache exists
            #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          ~/.cache/pip
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
         #----------------------------------------------
            #       install dependencies
            #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry install
        poetry run pip install -r requirements.txt
       #----------------------------------------------
            #       run tests
            #----------------------------------------------
    - name: Run tests
      run: |
        poetry run pytest -v
       #----------------------------------------------
            #       merge to dev
            #----------------------------------------------
    - name: Merge to dev
      uses: repo-sync/pull-request@v2
      with:
        destination_branch: dev
        github_token: ${{ secrets.GITHUB_TOKEN }}
        pr_title: Merge to dev
        pr_body: Merge to dev
        pr_assignees: svange
        pr_labels: merge-to-dev
        pr_reviewers: svange
        pr_milestone: 1

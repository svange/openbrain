[tool.poetry]
name = "openbrain"
version = "0.4.11"
description = "A package to interact with generative AI and build specialized generative AI workflows. This project is dual-licensed under AGPL-3.0 and a separate commercial license."
authors = ["Samuel Vange <7166607+svange@users.noreply.github.com>"]
readme = "README.md"
license = "AGPL-3.0"
packages = [{include = "openbrain"}]

[tool.poetry.scripts]
ob = "openbrain.agents.gpt_agent:cli"
ob-chat = "openbrain.agent.gpt_agent:chat"
ob-tuner = "openbrain.app:main"

[tool.poetry.dependencies]
python = "^3.10"
boto3 = "^1.28.51"
langchain = "^0.0.295"
openai = "^0.28.0"
promptlayer = "^0.2.9"
requests = "^2.31.0"
pydantic = "^2.3.0"
aws-lambda-powertools = "^2.25.0"
python-dotenv = "^1.0.0"
python-ulid = "^1.1.0"
aws-xray-sdk = "^2.12.0"
tiktoken = "^0.5.1"
gradio = "^3.44.4"
black = "^23.9.1"
pre-commit = "^3.4.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
faker = "^19.6.1"
retry = "^0.9.2"
flake8 = "^6.1.0"
black = "^23.9.1"
reorder-python-imports = "^3.11.0"


[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.semantic_release]
version_variable = [
    "openbrain/__init__.py:__version__",
    "pyproject.toml:version"
]

upload_to_pypi = true
upload_to_release = true
build_command = "pip install poetry && poetry build"


[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test"
]
minor_tags = ["build", "ci", "feat"]
patch_tags = ["fix", "perf"]


[tool.black]
line-length = 130
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| _build
| buck-out
| build
)/
'''

[tool.flake8]
max-line-length = 130
extend-ignore = ["D203", "E203", "E251", "E266", "E302", "E305", "E401", "E402", "E501", "F401", "F403", "W503"]
exclude = [".git", "__pycache__", "dist"]
max-complexity = 10

[tool.isort]
atomic = true
profile = "black"
line_length = 130
skip_gitignore = true